<launch>
  <arg name="modified_goal_topic_name" default="/planning/scenario_planning/modified_goal"/>
  <arg name="map_topic_name" default="/map/vector_map"/>
  <arg name="visualization_topic_name" default="/planning/mission_planning/route_marker"/>
  <arg name="mission_planner_param_path" default="$(find-pkg-share autoware_mission_planner_universe)/config/mission_planner.param.yaml"/>

  <!-- common -->
  <arg name="common_param_path" default="$(find-pkg-share autoware_core)/config/planning/common.param.yaml"/>
  <arg name="vehicle_param_file" default="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
  <arg name="nearest_search_param_path" default="$(find-pkg-share autoware_core)/config/planning/nearest_search.param.yaml"/>

  <!-- module config path -->
  <arg name="velocity_smoother_param_path" default="$(find-pkg-share autoware_core)/config/planning/autoware_velocity_smoother/velocity_smoother.param.yaml"/>
  <arg name="behavior_velocity_smoother_type_param_path" default="$(find-pkg-share autoware_core)/config/planning/autoware_velocity_smoother/Analytical.param.yaml"/>
  <arg name="behavior_velocity_planner_param_path" default="$(find-pkg-share autoware_core)/config/planning/behavior_velocity_planner/behavior_velocity_planner.param.yaml"/>
  <arg name="behavior_velocity_planner_common_param_path" default="$(find-pkg-share autoware_core)/config/planning/behavior_velocity_planner/behavior_velocity_planner_common.param.yaml"/>
  <arg name="behavior_velocity_planner_stop_line_module_param_path" default="$(find-pkg-share autoware_core)/config/planning/behavior_velocity_planner/stop_line.param.yaml"/>

  <arg name="enable_all_modules_auto_mode" default="true"/>
  <arg name="is_simulation" default="false"/>

  <group>
    <push-ros-namespace namespace="planning"/>
    <node_container pkg="rclcpp_components" exec="component_container_mt" name="mission_planner_container" namespace="">
      <composable_node pkg="autoware_mission_planner_universe" plugin="autoware::mission_planner_universe::MissionPlanner" name="mission_planner" namespace="">
        <param from="$(var mission_planner_param_path)"/>
        <remap from="~/input/modified_goal" to="$(var modified_goal_topic_name)"/>
        <remap from="~/input/vector_map" to="$(var map_topic_name)"/>
        <remap from="~/input/odometry" to="/localization/kinematic_state"/>
        <remap from="~/input/operation_mode_state" to="/system/operation_mode/state"/>
        <remap from="~/input/reroute_availability" to="/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/output/is_reroute_available"/>
        <remap from="~/route" to="route"/>
        <remap from="~/state" to="state"/>
        <remap from="~/debug/route_marker" to="$(var visualization_topic_name)"/>
      </composable_node>
      <!-- <composable_node pkg="autoware_mission_planner_universe" plugin="autoware::mission_planner_universe::RouteSelector" name="route_selector" namespace="">
        <remap from="~/planner/clear_route" to="mission_planner/clear_route"/>
        <remap from="~/planner/set_lanelet_route" to="mission_planner/set_lanelet_route"/>
        <remap from="~/planner/set_waypoint_route" to="mission_planner/set_waypoint_route"/>
        <remap from="~/planner/route" to="route"/>
        <remap from="~/planner/state" to="state"/>
      </composable_node> -->
    </node_container>

    <node pkg="autoware_path_generator" exec="path_generator_node" name="path_generator">
      <param from="$(find-pkg-share autoware_path_generator)/config/path_generator.param.yaml"/>
      <remap from="~/input/route" to="route"/>
      <remap from="~/input/vector_map" to="$(var map_topic_name)"/>
      <remap from="~/input/odometry" to="/localization/kinematic_state"/>
      <remap from="~/output/path" to="/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/path_with_lane_id"/>
    </node>

    <node pkg="autoware_behavior_velocity_planner" exec="autoware_behavior_velocity_planner_node" name="behavior_velocity_planner" output="screen">
      <!-- topic remap -->
      <remap from="~/input/path_with_lane_id" to="/planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/path_with_lane_id"/>
      <remap from="~/input/vector_map" to="/map/vector_map"/>
      <remap from="~/input/vehicle_odometry" to="/localization/kinematic_state"/>
      <remap from="~/input/accel" to="/localization/acceleration"/>
      <remap from="~/input/dynamic_objects" to="/perception/object_recognition/objects"/>
      <remap from="~/input/no_ground_pointcloud" to="/perception/obstacle_segmentation/pointcloud"/>
      <remap from="~/input/compare_map_filtered_pointcloud" to="compare_map_filtered/pointcloud"/>
      <remap from="~/input/vector_map_inside_area_filtered_pointcloud" to="vector_map_inside_area_filtered/pointcloud"/>
      <remap from="~/input/external_velocity_limit_mps" to="/planning/scenario_planning/max_velocity_default"/>
      <remap from="~/input/traffic_signals" to="/perception/traffic_light_recognition/traffic_signals"/>
      <remap from="~/input/virtual_traffic_light_states" to="/perception/virtual_traffic_light_states"/>
      <remap from="~/input/occupancy_grid" to="/perception/occupancy_grid_map/map"/>
      <remap from="~/output/path" to="path"/>
      <remap from="~/output/stop_reasons" to="/planning/scenario_planning/status/stop_reasons"/>
      <remap from="~/output/infrastructure_commands" to="/planning/scenario_planning/status/infrastructure_commands"/>
      <remap from="~/output/traffic_signal" to="debug/traffic_signal"/>
      <!-- params -->
      <param name="launch_modules" value="[autoware::behavior_velocity_planner::StopLineModulePlugin]"/>
      <param name="enable_all_modules_auto_mode" value="$(var enable_all_modules_auto_mode)"/>
      <param name="is_simulation" value="$(var is_simulation)"/>
      <!-- load config -->
      <param from="$(var common_param_path)"/>
      <param from="$(var vehicle_param_file)"/>
      <param from="$(var nearest_search_param_path)"/>
      <param from="$(var velocity_smoother_param_path)"/>
      <param from="$(var behavior_velocity_smoother_type_param_path)"/>
      <param from="$(var behavior_velocity_planner_param_path)"/>
      <param from="$(var behavior_velocity_planner_common_param_path)"/>
      <param from="$(var behavior_velocity_planner_stop_line_module_param_path)"/>
      <!-- <param from="$(var behavior_velocity_planner_template_param_path)"/> -->
    </node>

    <node pkg="autoware_planning_topic_converter" exec="path_to_trajectory_converter" name="path_to_trajectory_converter" namespace="">
      <!-- params -->
      <param name="input_topic" value="path"/>
      <param name="output_topic" value="trajectory"/>
    </node>
  </group>
</launch>
